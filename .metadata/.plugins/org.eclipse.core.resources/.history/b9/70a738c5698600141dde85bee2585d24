package common.l33tGaem.graphics;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;

import javax.swing.JPanel;

public class GaemPanel extends JPanel implements Runnable{
	
	private static final long serialVersionUID = 1L;
	
	//frame dimensions
	private static final int HEIGHT = 320;
	private static final int WIDTH = 240;
	private static final int SCALE = 2;
	
	//thread 
	private Thread thread;
	private boolean running;
	private int FPS = 60;
	private long targetTime = 1000/FPS;
	
	//image
	private BufferedImage image;
	private Graphics2D g;
	
	public GaemPanel() {
		super();
		setPreferredSize(new Dimension(HEIGHT * SCALE, WIDTH * SCALE));
		setFocusable(true);
		requestFocus();
		
	}
	
	public void addNotify(){
		super.addNotify();
		if (thread == null) {
			thread = new Thread(this);
			thread.start();
		}
		
	}
	
	
	@Override
	public void run(){ 
		init();
		
		long start;
		long elapsed;
		long wait;
		//game loop
		while(running) { 
			start = System.nanoTime();
			
			update();
			draw();
			drawToScreen();
			
			elapsed = System.nanoTime() - start;
			wait = targetTime - elapsed / 1000000;
			
			try {
				Thread.sleep(wait);
			} catch(Exception e) {
				e.printStackTrace();
			}
		}
	}
	
	
	public void init() {
		image = new BufferedImage(WIDTH, HEIGHT, BufferedImage.TYPE_INT_RGB);
		g = (Graphics2D) g;
		running = true;
	}
	public void update() {
		
	}
	
	public void draw() {
		
	}
	
	public void drawToScreen() {
		Graphics g2 = getGraphics();
		g2.drawImage(image, 0, 0, null);
		g2.dispose();
		
	}
	
	public void keyTyped(KeyEvent key) { }
	public void keyPressed(KeyEvent key) { }
	public void keyReleased(KeyEvent key) { }
}
